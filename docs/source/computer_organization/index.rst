===========
计算机原理
===========

本章内容主要来源于以下视频资源的学习

https://cs224.cs.vassar.edu/ ： 一门大学课程，关注于 ISA 和 CPU设计  
  
https://www.youtube.com/playlist?list=PLxfrSxK7P38X7XfG4X8Y9cdOURvC7ObMF ：一门油管的系列课程，关注于计算机底层设计以及数学相关的理论

https://www.youtube.com/watch?v=tpIctyqH29Q&list=PL8dPuuaLjXtNlUrzyH5r6jN9ulIgZBpdo ： 一门有关的计算机科学快速入门

前言
=====

为什么要学习计算机原理
------------------------
在信息越来越爆炸的今天，在时间越来越宝贵的今天，所有人在学习之前总要问自己一个问题，why？如果不搞定这个问题,那就可能只是三分钟热度，无法持久
无论是做操作系统开发，还是上层应用开发，了解计算机工作原理都是必要的，用一个不太恰当的比喻：
一名司机，或许根本不需要了解发动机或者是变速箱是如何工作的，也可以驾驶汽车，但是如果清楚工作原理，可以让你变成一个具备下述条件的司机： 
  
  - 清楚换挡逻辑，可以很轻松的让你的汽车油耗比其他人低
  - 汽车故障: 对于简单故障，可以自己尝试定位问题，说不定只是螺丝松了

这门课程目的也是如此，不清楚计算机工作原理，或许也能写上层应用代码，但是你的代码性能可能就是往往不如其他人，学习这门课程，尤其是对于操作系统开发工程师，更是必须的.总而言之，我相信在学习完这些基础，你会变得
 
 - 更值钱
 - 更清楚上层应用或者操作系统为什么要那样实现，而不是这样实现

本门课程主要是聚焦于下图标注的层级

.. image:: ./images/1.png
 :width: 800px
 
参考教材: cpmputer systems

计算机的前世今生
-----------------
你可能已经听惯了这类说辞，比如XXX在XX年发明了第一台计算机，XX是第一个女程序员，XX年发明了第一台超级计算机等等，好吧，但是你真的清楚吗？比如 为什么一定需要计算机呢？没有计算机人类不是也可以生活的很好吗？计算机的出现到底改变了什么？

本小节内容主要来自 Crash Course computer since的前三集 强烈建议你看一遍: https://www.youtube.com/watch?v=LN0ucKNX0hc&list=PL8dPuuaLjXtNlUrzyH5r6jN9ulIgZBpdo&index=3

我仅针对这部分内容做一些自己的总结

计算的存在：
  计算这个工作自古就有，事实上有数学这个概念以后就存在了，人类社会离开了计算，社会生活无法正常开展，比如你需要用1斤粮食换2块布，10斤粮食换20块布，经济交易中必须要数学计算。

计算机的存在：
  computer在表示计算机之前，表示的是一类职业，一类专门做数学计算的人员，中国也有，比如最早的"掌柜"，算盘一定是基本技能，也并不是人人都会计算，对吗？回想百年之前的中国，当识字尚且是困难，更何况数学？今天，无论是计算器、计算机都可以帮助我们完成复杂的数学计算，一切这些都可以叫计算机
  
什么驱动计算机的发展：
  我认为是辩证的，有人说计算机的出现改变了社会，不可否认，但是也必须承认，社会的发展促使了计算机的发展，当人类进入蒸汽时代，当人类的社会生产力发生了巨大进步的时候，社会对于计算量的成百千万倍的需求，必然导致要有对应的"工具"出现，匹配以同等的社会发展程度

暂且想到这里，最后总结一下，计算“机”的本质就是计算，古老的计算机1秒甚至几十秒计算一次，现在的计算机，一秒可以计算上亿次,仅此而已，当然要完成1秒上亿次的计算，必然要搞定某些技术，恰好，我们要研究的，就是探讨这些技术

关于顺序
---------
说实话，由于在学习以及阅读这门课程相关资料的时候，不同老师都有不同的讲课顺序，而这些知识可能又是错综复杂 互相依赖的，在梳理过程中 我也真的很头疼，但是最终我决定，我的笔记顺序将按照
抽象的逻辑 +  基础知识(和体系无关)的顺序

先说明一下什么是抽象逻辑，计算机原理，大部分都存在 封装(抽象)的概念，比如： 

 - 半导体晶体管是最基础的电子电路 
 - 逻辑门是 半导体晶体管 组成的，到了这一层以后，可以不用在关注 半导体晶体管
 - ALU是 逻辑门 组成的， 到了这一层以后，可以不用在关注 逻辑门
 - 依次类推

当然有些知识，可能不具有这样的特性，比较独立，我们就单独作为章节讲解

.. toctree::

   基础知识  <basic_concepts.rst>
   逻辑门和布尔代数 <logic.rst>
   内存是什么 <memory.rst>
   X86汇编指令 <assmblely.rst>





 


